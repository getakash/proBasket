{"version":3,"sources":["constants/productConstants.js","reducers/productReducers.js","constants/cartConstants.js","reducers/cartReducers.js","constants/userConstants.js","Store.js","reducers/userReducers.js","components/Header.js","actions/userActions.js","components/Footer.js","components/Rating.js","components/Product.js","actions/productActions.js","components/Message.js","components/Loader.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartAction.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","screens/ShippingScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","productListReducer","state","products","action","type","loading","payload","error","ADD_CART_ITEM","REMOVE_CART_ITEM","cartReducer","itemToAdd","existedItem","cartItems","find","i","productID","map","filter","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_REGISTER_CLEAR","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","undefined","reducer","combineReducers","productList","productDetails","product","cart","loginUser","userInfo","registerUser","userDetails","user","userUpdateProfile","success","initialState","Store","createStore","composeWithDevTools","applyMiddleware","thunk","Header","dispatch","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","Collapse","id","Nav","className","navbarScroll","Link","NavDropdown","title","name","Item","onClick","removeItem","Footer","Row","Col","Rating","value","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","defaultProps","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","HomeScreen","useEffect","a","axios","get","data","response","message","sm","md","lg","xl","ProductScreen","history","match","useState","qty","setQty","params","Image","alt","fluid","ListGroup","description","countInStock","Form","Control","onChange","e","target","Array","keys","num","Button","push","disabled","addToCart","getState","setItem","stringify","CartScreen","location","search","Number","split","removeCartItemHandler","removeFromCart","length","rounded","reduce","acc","item","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","onSubmit","preventDefault","config","headers","post","console","log","login","Group","controlId","Label","placeholder","required","RegisterScreen","setName","setMessage","confPassword","setConfPassword","register","ProfileScreen","Authorization","token","put","updateUserProfile","ShippingScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.10db5995.chunk.js","sourcesContent":["const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nconst PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nconst PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\nconst PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nconst PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nconst PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport {PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL}","import {PRODUCT_LIST_REQUEST, \r\n        PRODUCT_LIST_SUCCESS, \r\n        PRODUCT_LIST_FAIL, \r\n        PRODUCT_DETAILS_REQUEST, \r\n        PRODUCT_DETAILS_SUCCESS, \r\n        PRODUCT_DETAILS_FAIL} from \"../constants/productConstants\"\r\n\r\nconst productListReducer = (state = {products: []}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_LIST_REQUEST:\r\n            return {loading: true, products: []}\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return {loading: false, products: action.payload}\r\n        case PRODUCT_LIST_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = {product: {}}, action) => {\r\n    switch(action.type){\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return {loading: true, product: {}}\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return {loading: false, product: action.payload}\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default productListReducer;","const ADD_CART_ITEM = 'ADD_CART_ITEM'\r\nconst REMOVE_CART_ITEM = 'REMOVE_CART_ITEM'\r\n\r\nexport {ADD_CART_ITEM, REMOVE_CART_ITEM}","import {ADD_CART_ITEM, REMOVE_CART_ITEM} from '../constants/cartConstants'\r\n\r\nconst cartReducer = (state = { }, action) => {\r\n    switch(action.type){\r\n        case ADD_CART_ITEM:\r\n            const itemToAdd = action.payload\r\n\r\n            const existedItem = state.cartItems.find(i => i.productID === itemToAdd.productID)\r\n\r\n            if(existedItem){\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(i => i.productID === itemToAdd.productID ? itemToAdd : i)\r\n                }\r\n            }else{\r\n                return{\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, itemToAdd]\r\n                }\r\n            }\r\n        case REMOVE_CART_ITEM:\r\n            return{\r\n                ...state,\r\n                cartItems: state.cartItems.filter((i) => i.productID !== action.payload)\r\n            }\r\n        default:\r\n            return state    \r\n    }\r\n}\r\n\r\nexport default cartReducer","const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\r\nconst USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\r\nconst USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\r\nconst USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nconst USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\r\nconst USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\r\nconst USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\r\nconst USER_REGISTER_CLEAR = \"USER_REGISTER_CLEAR\"\r\n\r\nconst USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\r\nconst USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\r\nconst USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\r\n\r\nconst USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST\"\r\nconst USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS\"\r\nconst USER_UPDATE_PROFILE_FAIL = \"USER_UPDATE_PROFILE_FAIL\"\r\nconst USER_UPDATE_PROFILE_RESET = \"USER_UPDATE_PROFILE_RESET\"\r\n\r\nexport {USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, \r\n        USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL,\r\n        USER_REGISTER_CLEAR, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, \r\n        USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS,\r\n        USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET}","import {createStore, applyMiddleware, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport productListReducer, {productDetailsReducer} from './reducers/productReducers'\r\nimport cartReducer from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer, \r\n        userDetailsReducer, userUpdateProfileReducer} from './reducers/userReducers'\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\nconst userInfoFromStorage = (localStorage.getItem('userInfo') && localStorage.getItem('userInfo') !== undefined) ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    cart: cartReducer,\r\n    loginUser: userLoginReducer,\r\n    registerUser: userRegisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n});\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n    },\r\n    loginUser: {\r\n        userInfo: userInfoFromStorage,\r\n    },\r\n};\r\n\r\nconst Store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\nexport default Store;","import {USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_CLEAR, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\n\r\nconst userLoginReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return {loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_LOGIN_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userRegisterReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return {loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return {loading: false, userInfo: action.payload}\r\n        case USER_REGISTER_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_REGISTER_CLEAR:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userDetailsReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_DETAILS_REQUEST:\r\n            return {...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return {loading: false, user: action.payload}\r\n        case USER_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nconst userUpdateProfileReducer = (state = {}, action) => {\r\n    switch(action.type){\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return {loading: true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return {loading: false, success: true, userInfo: action.payload}\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return {loading: false, error: action.payload}\r\n        case USER_UPDATE_PROFILE_RESET:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer}","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {logout} from '../actions/userActions'\r\n\r\nexport default function Header() {\r\n    const dispatch = useDispatch();\r\n\r\n    const loginUser = useSelector(state => state.loginUser)\r\n    const {userInfo} = loginUser\r\n\r\n    function logoutHandler(){\r\n        dispatch(logout())\r\n    }\r\n    return (\r\n        <header>\r\n            <Navbar bg=\"dark\" variant='dark' expand=\"lg\" collapseOnSelect>\r\n            <Container>\r\n                <LinkContainer to='/'>\r\n                    <Navbar.Brand >ProBasket</Navbar.Brand>\r\n                </LinkContainer>\r\n                \r\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                <Navbar.Collapse id=\"navbarScroll\">\r\n                    <Nav\r\n                    className=\"ms-auto my-2 my-lg-0\"\r\n                    // style={{ maxHeight: '100px' }}\r\n                    navbarScroll\r\n                    >\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link ><i className='fas fa-shopping-cart mx-1'></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n                    {userInfo ?  \r\n                        <NavDropdown title={userInfo.name} id='collasible-nav-dropdown'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        : \r\n                        <LinkContainer to='/login'>\r\n                            <Nav.Link ><i className='fas fa-user mx-1'></i>Sign In</Nav.Link>\r\n                        </LinkContainer>\r\n                    }\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n","import axios from 'axios'\r\nimport {USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGIN_FAIL, USER_LOGOUT, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_CLEAR, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_UPDATE_PROFILE_FAIL} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login', {email, password}, config)\r\n\r\n        console.log(data)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout =() => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({\r\n        type: USER_LOGOUT\r\n    })\r\n    dispatch({\r\n        type: USER_REGISTER_CLEAR\r\n    })\r\n}\r\n\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n        const config = {\r\n            headers:{\r\n                'content-type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/', {name, email, password}, config)\r\n\r\n        // console.log(data)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = () => async(dispatch, getState) => {\r\n    try{\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST\r\n        })\r\n\r\n        const {loginUser: {userInfo}} = getState()\r\n        const config = {\r\n            headers:{\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get('/api/users/profile', config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST\r\n        })\r\n\r\n        const {loginUser: {userInfo}} = getState()\r\n\r\n        const config = {\r\n            headers:{\r\n                Authorization : `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put('/api/users/profile',user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col className='text-center py-3'>\r\n                    Copyright &copy; ProBasket\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Rating({value, text, color}) {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color: color}} className={\r\n                    value>=1 ? 'fas fa-star' : \r\n                    value>=0.5 ? 'fas fa-star-half-alt' : \r\n                    'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}} className={\r\n                    value>=2 ? 'fas fa-star' :\r\n                    value>=1.5 ? 'fas fa-star-half-alt' :\r\n                    'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}} className={\r\n                    value>=3 ? 'fas fa-star' :\r\n                    value>=2.5 ? 'fas fa-star-half-alt' :\r\n                    'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}} className={\r\n                    value>=4 ? 'fas fa-star' :\r\n                    value>=3.5 ? 'fas fa-star-half-alt' :\r\n                    'far fa-star'\r\n                }></i>\r\n            </span>\r\n            <span>\r\n                <i style={{color: color}} className={\r\n                    value>=5 ? 'fas fa-star' :\r\n                    value>=4.5 ? 'fas fa-star-half-alt' :\r\n                    'far fa-star'\r\n                }></i>\r\n            </span>\r\n            \r\n            <span> {text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps= {\r\n    color: 'grey'\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Card} from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nexport default function Product({product}) {\r\n    return (\r\n        <Card className='my-3 p-3 rounded'>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Img src={product.image} variant='top' />\r\n            </Link>\r\n            <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n                <Card.Title as='div'>\r\n                    <strong>{product.name}</strong>\r\n                </Card.Title>\r\n            </Link>\r\n            <Card.Text as='div'>\r\n                <Rating value={product.rating}\r\n                        text={`${product.numReviews} reviews`}></Rating>\r\n            </Card.Text>\r\n            <Card.Text as='h3'>\r\n                &#8377;{product.price}\r\n            </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\nimport {PRODUCT_LIST_REQUEST, \r\n        PRODUCT_LIST_SUCCESS, \r\n        PRODUCT_LIST_FAIL, \r\n        PRODUCT_DETAILS_REQUEST, \r\n        PRODUCT_DETAILS_SUCCESS, \r\n        PRODUCT_DETAILS_FAIL} from \"../constants/productConstants\"\r\n\r\nexport const listProducts = () => async(dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/products')\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const showProductDetails = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({type: PRODUCT_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\nexport default function Message({variant, children}) {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}","import React from 'react'\r\nimport {Spinner} from 'react-bootstrap'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <Spinner \r\n        animation = 'border'\r\n        role='status'\r\n        style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            margin: 'auto',\r\n            display: 'block'\r\n        }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Product from '../components/Product'\r\nimport {listProducts} from '../actions/productActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nexport default function HomeScreen() {\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const {loading, error, products} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <h1>Latest products</h1>\r\n            {loading ? <Loader /> : error ? <Message variant = 'danger'>{error}</Message> : \r\n                <Row>\r\n                    {products.map((product) => (\r\n                        <Col sm={12} md={6} lg={4} xl={3}>\r\n                            <Product key={product._id} product={product} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import React, {useState, useEffect}from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {showProductDetails} from '../actions/productActions'\r\nimport {Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\n\r\nexport default function ProductScreen({history, match}) {\r\n\r\n    const [qty, setQty] = useState(1)\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n\r\n    const {error, loading, product} = productDetails\r\n\r\nuseEffect(()=>{\r\n    dispatch(showProductDetails(match.params.id))\r\n}, [dispatch, match])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-dark my-3' to=\"/\">\r\n                Go Back\r\n            </Link>\r\n\r\n            {loading ? <Loader></Loader> : error ? <Message variant = 'danger'>{error}</Message> : \r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={product.image} alt={product.name} fluid></Image>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>{product.name}</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Rating value={product.rating} text={`${product.numReviews} Reviews`} />\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Price: &#8377;{product.price}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                Description: {product.description}\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                    <Col md={3}>\r\n                        <Card>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Price:</Col>\r\n                                        <Col>\r\n                                            <strong>{product.price}</strong>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Status:</Col>\r\n                                        <Col>\r\n                                            {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n\r\n                                {product.countInStock > 0 && (\r\n                                    <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col>Qty:</Col>\r\n                                        <Col>\r\n                                            <Form.Control as='select' value={qty} onChange = {\r\n                                            (e) => setQty(e.target.value)}>\r\n                                                {[...Array(product.countInStock).keys()].map(num => (\r\n                                                    <option key ={num+1}> {num+1}</option>\r\n                                                ))}\r\n                                            </Form.Control>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                )}\r\n\r\n                                <ListGroup.Item >\r\n                                    <Button onClick = {addToCartHandler} className='col-12' type='button' disabled={product.countInStock === 0}>\r\n                                        Add To Cart\r\n                                    </Button>\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","import {ADD_CART_ITEM, REMOVE_CART_ITEM} from '../constants/cartConstants'\r\nimport axios from 'axios'\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) => {\r\n    const {data} = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: ADD_CART_ITEM,\r\n        payload: {\r\n            productID: data._id,\r\n            image: data.image,\r\n            name: data.name,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty: qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: REMOVE_CART_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}","import React, { useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Link} from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport {addToCart, removeFromCart} from '../actions/cartAction'\r\n\r\n\r\nexport default function CartScreen({match, location, history}) {\r\n    const productID = match.params.id\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(productID){\r\n            dispatch(addToCart(productID, qty))\r\n        }\r\n    }, [dispatch, productID, qty])\r\n\r\n    const removeCartItemHandler = (id) => {\r\n        dispatch(removeFromCart(id))\r\n    }\r\n    const checkoutHandler = () =>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? <Message>Your Cart is Empty <Link to='/'> Go Back</Link></Message> : \r\n                    <ListGroup>\r\n                        {cartItems.map(i => (\r\n                            <ListGroup.Item key={i.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={i.image} alt={i.name} fluid rounded></Image>\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${i.productID}`}> {i.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>&#8377;{i.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={i.qty} onChange = {\r\n                                        (e) => dispatch(addToCart(i.productID,e.target.value ))}>\r\n                                            {[...Array(i.countInStock).keys()].map(num => (\r\n                                                <option key ={num+1}> {num+1}</option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={\r\n                                            () => removeCartItemHandler(i.productID)\r\n                                        } >\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                }\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                        <h2>\r\n                            Subtotal ({cartItems.reduce((acc, item) => acc + Number(item.qty), 0)})\r\n                            items\r\n                        </h2>\r\n                        &#8377;\r\n                        {cartItems\r\n                            .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                            .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                        <Button\r\n                            type='button'\r\n                            className='col-12'\r\n                            disabled={cartItems.length === 0}\r\n                            onClick={checkoutHandler}\r\n                        >\r\n                            Proceed To Checkout\r\n                        </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Col, Row, Container} from 'react-bootstrap'\r\n\r\nexport default function FormContainer({children}) {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {login} from '../actions/userActions'\r\n\r\nexport default function LoginScreen({location, history}) {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const loginUser = useSelector(state => state.loginUser)\r\n    const {error, loading, userInfo} = loginUser\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    function submitFormHandler(e){\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message>{error}</Message> }\r\n            {loading && <Loader></Loader> }\r\n            <Form onSubmit= {submitFormHandler}>\r\n                <Form.Group className='my-2' controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        value={email}\r\n                        placeholder='enter email'\r\n                        required\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className='my-2' controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        value={password}\r\n                        placeholder='enter password'\r\n                        required\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='my-2' type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row>\r\n                <Col>\r\n                    New Customer {' '}\r\n                    <Link to = {redirect ? `/register/?redirect=${redirect}` : '/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {register} from '../actions/userActions'\r\n\r\nexport default function RegisterScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [password, setPassword] = useState('')\r\n    const [confPassword, setConfPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n    const registerUser = useSelector(state => state.registerUser)\r\n    const {error, loading, userInfo} = registerUser\r\n\r\n    useEffect(() => {\r\n        if(userInfo){\r\n            history.push(redirect)\r\n        }\r\n    },[history, userInfo, redirect])\r\n\r\n    function submitFormHandler(e){\r\n        e.preventDefault()\r\n        if(password !== confPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {error && <Message>{error}</Message> }\r\n            {message && <Message>{message}</Message> }\r\n            {loading && <Loader></Loader> }\r\n            <Form onSubmit= {submitFormHandler}>\r\n                <Form.Group className='my-1' controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control \r\n                        type='name'\r\n                        value={name}\r\n                        placeholder='enter your name'\r\n                        required\r\n                        onChange = {(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className='my-1' controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control \r\n                        type='email'\r\n                        value={email}\r\n                        placeholder='enter email'\r\n                        required\r\n                        onChange = {(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className='my-1' controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        value={password}\r\n                        placeholder='enter password'\r\n                        required\r\n                        onChange = {(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group className='my-1' controlId='confPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control \r\n                        type='password'\r\n                        value={confPassword}\r\n                        placeholder='confirm password'\r\n                        required\r\n                        onChange = {(e) => setConfPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n                <Button className='my-1' type='submit' variant='primary'>Sign Up</Button>\r\n            </Form>\r\n\r\n            <Row>\r\n                <Col>\r\n                    Have an account? {' '}\r\n                    <Link to = {redirect ? `/login/?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, Form, Button } from 'react-bootstrap'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\n// import USER_UPDATE_PROFILE_RESET from '../constants/userConstants'\r\n\r\nexport default function ProfileScreen({location, history}) {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n    const [password, setPassword] = useState('')\r\n    const [confPassword, setConfPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails)  \r\n    const {user, error, loading} = userDetails\r\n    \r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)  \r\n    const {success} = userUpdateProfile\r\n\r\n    const loginUser = useSelector(state => state.loginUser)\r\n    const {userInfo} = loginUser\r\n\r\n    useEffect(() => {\r\n         \r\n        if(!userInfo){\r\n            history.push('/')\r\n        }else{\r\n            if(!user ){\r\n                dispatch(getUserDetails())\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    },[history, userInfo, user, dispatch])\r\n\r\n    function submitFormHandler(e){\r\n        e.preventDefault()\r\n        if(password !== confPassword){\r\n            setMessage('Passwords do not match')\r\n        }else{\r\n            dispatch(updateUserProfile({name, email, password}))\r\n        }\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>Profile</h2>\r\n                {error && <Message variant='danger'>{error}</Message> }\r\n                {message && <Message variant='danger'>{message}</Message> }\r\n                {success && <Message variant='success'>Profile Updated</Message> }\r\n                {loading && <Loader></Loader> }\r\n                <Form onSubmit= {submitFormHandler}>\r\n                    <Form.Group className='my-1' controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control \r\n                            type='name'\r\n                            value={name}\r\n                            placeholder='enter your name'\r\n                            onChange = {(e) => setName(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className='my-1' controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control \r\n                            type='email'\r\n                            value={email}\r\n                            placeholder='enter email'\r\n                            onChange = {(e) => setEmail(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className='my-1' controlId='password'>\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password'\r\n                            value={password}\r\n                            placeholder='enter password'\r\n                            onChange = {(e) => setPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className='my-1' controlId='confPassword'>\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control \r\n                            type='password'\r\n                            value={confPassword}\r\n                            placeholder='confirm password'\r\n                            onChange = {(e) => setConfPassword(e.target.value)}\r\n                        ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button className='my-1' type='submit' variant='primary'>Update</Button>\r\n                </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>Orders</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ShippingScreen() {\r\n    return (\r\n        <div>\r\n            <h1>UNDER CONSTRUCTION</h1>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport './bootstrap.min.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} ></Route>\n          <Route path='/profile' component={ProfileScreen} ></Route>\n          <Route path='/shipping' component={ShippingScreen} ></Route>\n          <Route path='/register' component={RegisterScreen} ></Route>\n          <Route path='/product/:id' component={ProductScreen} ></Route>\n          <Route path='/cart/:id?' component={CartScreen} ></Route>\n          <Route path='/' component={HomeScreen} exact></Route>\n        </Container>\n      </main>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport Store from './Store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}